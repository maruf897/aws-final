AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  1730897Final_project

  Sample SAM Template for 1730897

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  JokesTable1730897:
    Type: AWS::DynamoDB::Table
    Properties: 
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST 
      KeySchema: 
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE

  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: TestSam1730897Pool
      AutoVerifiedAttributes: 
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: TestSam1730897PoolClient
      GenerateSecret: false
      UserPoolId: !Ref CognitoUserPool
      ExplicitAuthFlows: 
       
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  
  AuthorizedApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: TestCognitoAuthorizer
        Authorizers:
          TestCognitoAuthorizer:
            UserPoolArn: !GetAtt CognitoUserPool.Arn
  UnauthorizedApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Dev
      Cors: "'*'"
  GetJokesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: app.get_jokes
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home
            Method: get
            RestApiId: !Ref AuthorizedApi
  PostJokeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: app.post_joke
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/postjoke
            Method: post
            RestApiId: !Ref AuthorizedApi
  GetJokeReqListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: admin.get_jokeReq_list
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/admin/
            Method: get
            RestApiId: !Ref AuthorizedApi
  AcceptJokeReqListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: admin.accept_jokeReq
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/admin/acceptjoke
            Method: post
            RestApiId: !Ref AuthorizedApi
  AddCategoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: category.add_Category
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/admin/addcategory
            Method: post
            RestApiId: !Ref AuthorizedApi
  AllCategoryFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: category.get_Category_list
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/admin/allcategory
            Method: post
            RestApiId: !Ref AuthorizedApi
  UpdateProfileFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: Home/
      Handler: profile.update_profile
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /home/updateprofile
            Method: post
            RestApiId: !Ref AuthorizedApi
  SignUpFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: auth/
      Handler: signup.SignUp_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      Events:
        SignUp:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /auth/singup
            Method: post
            RestApiId: !Ref UnauthorizedApi
  ConfirmSignUpFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: auth/
      Handler: confirm_sign_up.ConfirmSingUp_handler
      Runtime: python3.9
      Policies:
        - AmazonDynamoDBFullAccess
        - AWSLambdaBasicExecutionRole
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
          TABLE_NAME: !Ref JokesTable1730897
      Events:
        Confirmation:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /auth/confirmsignup
            Method: post
            RestApiId: !Ref UnauthorizedApi
  SignInFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: auth/
      Handler: signin.SignIn_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      Events:
        SignIn:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /auth/signin
            Method: post
            RestApiId: !Ref UnauthorizedApi

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  HelloWorldFunction:
    Description: "SignInFunction Lambda Function ARN"
    Value: !GetAtt SignInFunction.Arn
  # HelloWorldFunctionIamRole:
  #   Description: "Implicit IAM Role created for Hello World function"
  #   Value: !GetAtt HelloWorldFunctionRole.Arn
